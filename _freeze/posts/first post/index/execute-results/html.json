{
  "hash": "6221e1a6c38fc5a82e98def295ab7006",
  "result": {
    "markdown": "---\ntitle: \"First Post\"\nauthor: \"Danielle Carrington\"\ndate: \"2023-12-08\"\ncategories: [hotel, analysis]\nimage: article.jpg\n---\n\n\nThis is a post with code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Call the necessary packages\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(rpart)\nlibrary(ipred)\nlibrary(caret)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: ggplot2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: lattice\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(randomForest)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nrandomForest 4.7-1.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nType rfNews() to see new features/changes/bug fixes.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'randomForest'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:ggplot2':\n\n    margin\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:dplyr':\n\n    combine\n```\n:::\n\n```{.r .cell-code}\nlibrary(knitr) \nlibrary(leaps)\n\nclient_data<-read.csv(\"hotelsat.csv\", head=TRUE)\nnames(client_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"satCleanRoom\"         \"satCleanBath\"         \"satCleanCommon\"      \n [4] \"satFrontStaff\"        \"satDiningStaff\"       \"satHouseStaff\"       \n [7] \"satValetStaff\"        \"satPerks\"             \"satRoomPrice\"        \n[10] \"satDiningPrice\"       \"satWifiPrice\"         \"satParkingPrice\"     \n[13] \"satCity\"              \"satCloseTransp\"       \"satCloseEvents\"      \n[16] \"satPoints\"            \"satRecognition\"       \"satOverall\"          \n[19] \"distanceTraveled\"     \"nightsStayed\"         \"visitPurpose\"        \n[22] \"avgRoomSpendPerNight\" \"avgFoodSpendPerNight\" \"avgWifiSpendPerNight\"\n[25] \"eliteStatus\"         \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check for missing  data \nmissing_vars <-(client_data)\nif (length(missing_vars) < 0) {\n  stop(paste(\"Null\", paste(missing_vars, collapse = \", \")))\n}\n\n# Split the data into training and testing sets \ntrain_index <- 1:500\nclient_data_train <- client_data[train_index, ]\nclient_data_test <- client_data[-train_index, ]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Group training data by Visit Purpose\n\nBusinessTrips <- client_data_train %>%\n  group_by(visitPurpose = \"Business\")\n\nsummary(BusinessTrips)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  satCleanRoom    satCleanBath   satCleanCommon  satFrontStaff  \n Min.   :1.000   Min.   :2.000   Min.   :1.000   Min.   :1.000  \n 1st Qu.:3.000   1st Qu.:4.000   1st Qu.:3.000   1st Qu.:3.000  \n Median :4.000   Median :4.000   Median :4.000   Median :4.000  \n Mean   :4.036   Mean   :4.178   Mean   :3.876   Mean   :3.912  \n 3rd Qu.:5.000   3rd Qu.:5.000   3rd Qu.:5.000   3rd Qu.:5.000  \n Max.   :7.000   Max.   :7.000   Max.   :6.000   Max.   :7.000  \n satDiningStaff  satHouseStaff   satValetStaff      satPerks    \n Min.   :1.000   Min.   :1.000   Min.   :1.000   Min.   :1.000  \n 1st Qu.:3.000   1st Qu.:4.000   1st Qu.:3.000   1st Qu.:4.000  \n Median :4.000   Median :4.000   Median :4.000   Median :4.000  \n Mean   :3.686   Mean   :4.344   Mean   :3.698   Mean   :4.268  \n 3rd Qu.:4.000   3rd Qu.:5.000   3rd Qu.:4.000   3rd Qu.:5.000  \n Max.   :7.000   Max.   :7.000   Max.   :7.000   Max.   :7.000  \n  satRoomPrice   satDiningPrice  satWifiPrice   satParkingPrice    satCity     \n Min.   :1.000   Min.   :1.0    Min.   :1.000   Min.   :1.000   Min.   :1.000  \n 1st Qu.:3.000   1st Qu.:3.0    1st Qu.:3.000   1st Qu.:4.000   1st Qu.:3.000  \n Median :4.000   Median :4.0    Median :4.000   Median :4.000   Median :4.000  \n Mean   :3.802   Mean   :3.7    Mean   :3.962   Mean   :4.276   Mean   :3.932  \n 3rd Qu.:5.000   3rd Qu.:4.0    3rd Qu.:5.000   3rd Qu.:5.000   3rd Qu.:5.000  \n Max.   :7.000   Max.   :7.0    Max.   :7.000   Max.   :7.000   Max.   :7.000  \n satCloseTransp satCloseEvents    satPoints     satRecognition   satOverall   \n Min.   :1.00   Min.   :1.000   Min.   :1.000   Min.   :1.00   Min.   :1.000  \n 1st Qu.:3.00   1st Qu.:4.000   1st Qu.:3.000   1st Qu.:3.00   1st Qu.:3.000  \n Median :4.00   Median :4.000   Median :4.000   Median :4.00   Median :4.000  \n Mean   :4.09   Mean   :4.244   Mean   :4.036   Mean   :3.95   Mean   :3.976  \n 3rd Qu.:5.00   3rd Qu.:5.000   3rd Qu.:5.000   3rd Qu.:5.00   3rd Qu.:5.000  \n Max.   :7.00   Max.   :7.000   Max.   :7.000   Max.   :7.00   Max.   :7.000  \n distanceTraveled  nightsStayed    visitPurpose       avgRoomSpendPerNight\n Min.   :  24.0   Min.   : 1.000   Length:500         Min.   :119.0       \n 1st Qu.: 252.0   1st Qu.: 2.000   Class :character   1st Qu.:145.2       \n Median : 485.5   Median : 3.000   Mode  :character   Median :152.3       \n Mean   : 714.2   Mean   : 3.724                      Mean   :153.7       \n 3rd Qu.: 939.5   3rd Qu.: 5.000                      3rd Qu.:160.7       \n Max.   :6422.0   Max.   :15.000                      Max.   :199.0       \n avgFoodSpendPerNight avgWifiSpendPerNight eliteStatus       \n Min.   :  0.00       Min.   : 0.000       Length:500        \n 1st Qu.: 10.00       1st Qu.: 4.749       Class :character  \n Median : 16.38       Median : 7.450       Mode  :character  \n Mean   : 22.78       Mean   : 7.213                         \n 3rd Qu.: 31.68       3rd Qu.: 9.950                         \n Max.   :116.80       Max.   :14.950                         \n```\n:::\n\n```{.r .cell-code}\nprint(min)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nfunction (..., na.rm = FALSE)  .Primitive(\"min\")\n```\n:::\n\n```{.r .cell-code}\nprint(max)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nfunction (..., na.rm = FALSE)  .Primitive(\"max\")\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Histogram using base R plotting\nhist(BusinessTrips$distanceTraveled, main = \"Distance Traveled for Business Trips\", xlab = \"Distance Traveled\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Load ggplot2 package if not already loaded\n# install.packages(\"ggplot2\")\nlibrary(ggplot2)\n\n# Histogram using ggplot2\nggplot(BusinessTrips, aes(x = distanceTraveled)) +\n  geom_histogram(binwidth = 100, fill = \"skyblue\", color = \"black\") +\n  labs(title = \"Distance Traveled for Business Trips\", x = \"Distance Traveled\", y = \"Frequency\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}